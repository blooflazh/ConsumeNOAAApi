package GUI;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import DATABASE.*;

/**
 * 
 * IST 411 
 * GUI0.java 
 * Purpose: The main user interface which allows interaction and viewing of the Database.
 *  
 * 
 * @author Kameron Dangleben 3/14/21
 */

public class GUI0 extends javax.swing.JFrame {
    //private AddToTable a = new AddToTable();
    //private int pkey = 1;

    private ArrayList<String> GUIresult;
    private TableRowSorter<TableModel> rsorter;
    private boolean dbComplete = false;

    
    /**
     * Creates new form GUI_0
     */
    public GUI0() throws IOException{
        
        initComponents();
        AddToTable a = new AddToTable();
        JOptionPane.showMessageDialog(null, "Grabbing from Database. Press OK to continue.");
        a.init();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">         '
      
   
    private void initComponents() {

        setjButton1(new javax.swing.JButton());
        setjScrollPane1(new javax.swing.JScrollPane());
        setjTable1(new javax.swing.JTable());
        setjComboBox1(new javax.swing.JComboBox<>());
         
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        
        getjButton1().setText("Populate Database");
         
        getjButton1().addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
       
        getjComboBox1().addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                
                if(dbComplete)
                {
                    setRsorter(new TableRowSorter<>(getjTable1().getModel()));//sets a row sorter on the table
                    String text = getjComboBox1().getSelectedItem().toString();//Uses the text from the combo box as the filter string
                     String regex = String.format("^%s$", text);//Gets the EXACT string which is in the combo box
                getjTable1().setRowSorter(getRsorter());
                    getRsorter().setRowFilter(RowFilter.regexFilter(regex, 0));//filter by the first row (row 0)
                }
                
            }
        });
        getjTable1().setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DATATYPE", "DATE", "ATTRIBUTES", "STATION", "VALUE"//headers
            }
        ) {
            
        });
        getjScrollPane1().setViewportView(getjTable1());

        getjComboBox1().setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));//Default combo box model

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(getjScrollPane1(), javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(getjButton1())
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(getjComboBox1(), javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getjButton1())
                    .addComponent(getjComboBox1(), javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(getjScrollPane1(), javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
     
     private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {    
      AddToTable a = new AddToTable();//Creates the database object
      
      a.grabFromDB();//Grab from the DB. 
      
      GUIresult = a.getResults();//GUIresult grabs data from ArrayList<String> a.getResults();
      this.clearLm();//Clear the table
      for(int i = 0; i < GUIresult.size(); i+=6)//Insert arraylist into table. i+6 because there are 6 columns
      {
          this.updateLm(GUIresult.get(i), 
                  GUIresult.get(i + 1), 
                  GUIresult.get(i + 2), 
                  GUIresult.get(i + 3),
                  GUIresult.get(i +4), 
                  GUIresult.get(i + 5));
          
             getjComboBox1().setModel(new DefaultComboBoxModel<>(a.getCbox().toArray(new String[0])));//Add cBox from AddToTable
            dbComplete= true;//Confirm that the integration is complete
          
      }
    }                                        


     
         public void run() throws IOException {
                new GUI0().setVisible(true);//Make the GUI visible
            }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
  public void updateLm(String a, String b, String c, String d, String e, String f)//Allows the table to be modified
    {
         DefaultTableModel model = (DefaultTableModel) getjTable1().getModel();
        
        model.addRow(new Object[]{a, b, c,d, e, f});
    }

    /**
     * @return the jButton1
     */
    public javax.swing.JButton getjButton1() {
        return jButton1;
    }

    /**
     * @param jButton1 the jButton1 to set
     */
    public void setjButton1(javax.swing.JButton jButton1) {
        this.jButton1 = jButton1;
    }

    /**
     * @return the jComboBox1
     */
    public javax.swing.JComboBox<String> getjComboBox1() {
        return jComboBox1;
    }

    /**
     * @param jComboBox1 the jComboBox1 to set
     */
    public void setjComboBox1(javax.swing.JComboBox<String> jComboBox1) {
        this.jComboBox1 = jComboBox1;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jTable1
     */
    public javax.swing.JTable getjTable1() {
        return jTable1;
    }

    /**
     * @param jTable1 the jTable1 to set
     */
    public void setjTable1(javax.swing.JTable jTable1) {
        this.jTable1 = jTable1;
    }
    
         public void clearLm()//Clears the table
     {
        DefaultTableModel model = (DefaultTableModel) getjTable1().getModel();
        
        
       model.setRowCount(0);
       
     }







    /**
     * @return the rsorter
     */
    public TableRowSorter<TableModel> getRsorter() {
        return rsorter;
    }

    /**
     * @param rsorter the rsorter to set
     */
    public void setRsorter(TableRowSorter<TableModel> rsorter) {
        this.rsorter = rsorter;
    }
}
